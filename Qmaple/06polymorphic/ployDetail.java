package com.Qmaple.polymorphic;

public class ployDetail {
    /*
    ========向上转型：父类引用 指向 子类对象
    语法：父类类型 引用名 = new 子类类型();

    1）等号左边的是编译类型，决定该对象能引用的属性和成员方法，
    2）等号右边的是运行类型，是实际上对象运行的类。
    Animal animal = new Dog();

    个人解读：
    实际在创建对象时，系统创建了该子类及其父类的所有属性和方法，也就是对象创建时
    是按照运行类型进行创建的，只不过在调用属性与方法时，是按照编译类型来的，编译类型没有的
    属性与方法，该编译类型对应的引用名无权调用。
     */

    /*
    =========向下转型：
    语法：子类类型 新引用名 = (子类类型)引用名

    1）只能强转父类的引用，不能强转父类的对象
    2）只有父类引用名指向的对象类型是该子类类型时，才可以向下转型，比如：
    父类(Animal)引用名指向的 dog 类型，那么就可以用向下转型将其转为dog
    Dog dog = (Dog)animal;

    个人解读；
    虽然在一开始向上转型后，引用名animal 只能引用父类(Animal)中的属性和方法，
    但是在创建对象时，其实子类中特有的属性和方法也被创建了，只不过animal没有
    调用的权限，在进行向下转型后，新的引用名dog 拥有调动该对象所有属性和方法的权限。
     */


    //！！！！！！属性与方法不同，没有重写这一说，属性的值看编译类型
}
